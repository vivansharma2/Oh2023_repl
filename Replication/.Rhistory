library(haven)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
mean_value <- mean(df.age, na.rm = TRUE)
mean_value <- mean(df.b1_age, na.rm = TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
mean_value <- mean(df.age, na.rm = TRUE)
mean_value <- mean(df.b1_age, na.rm = TRUE)
mean_value <- mean(df$b1_age, na.rm = TRUE)
mean_value <- mean(df$b1_age, na.rm = TRUE)
mean_value
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
mean_value <- mean(df$b1_age, na.rm = TRUE)
mean_value <- mean(df$married, na.rm = TRUE)
mean
mean_value
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
mean_value <- mean(df$famsize, na.rm = TRUE)
mean_value
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
mean_value <- mean(df$workmember, na.rm = TRUE)
mean_value
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
mean_value <- mean(df$workshare, na.rm = TRUE)
mean_value
mean_value <- mean(df$year_edu, na.rm = TRUE)
mean_value
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
mean_value <- mean(df$read_odiya, na.rm = TRUE)
mean_value
mean_value <- mean(df$pucca_house, na.rm = TRUE)
mean_value
mean_value <- mean(df$semipucca_house, na.rm = TRUE)
mean_value
m <- mean(df$kutcha_house, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$gunta, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$gunta, na.rm = TRUE)
m]
m
m <- mean(df$acre, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$acre, na.rm = TRUE)
m
m <- mean(df$landsize, na.rm = TRUE)
m
m <- mean(df$own_land, na.rm = TRUE)
m
m <- mean(df$income, na.rm = TRUE)
m
m <- mean(df$log_income, na.rm = TRUE)
m
m <- mean(df$paid_days, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
install.packages("stringr")
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
cleaned_variables <- sapply(variables, function(x) gsub("^b13[a-j]", "", x))
cleaned_variables <- sapply(vars, function(x) gsub("^b13[a-j]", "", x))
# Clean the above
cl <- sapply(vars, function(x) gsub("^b13[a-j]", "", x))
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
df$sew_mach_own
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
df$sew_mach_own
View(df)
m <- mean(df$sew_mach_own, na.rm = TRUE)
m
m <- mean(df$watches_own, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$own_index, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$own_index, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$workshare, na.rm = TRUE)
m
m <- mean(df$workshare_miss, na.rm = TRUE)
m
m <- mean(df$log_income, na.rm = TRUE)
m
View(df)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
View(df)
View(df)
m <- mean(df$wealth_pca, na.rm = TRUE)
m
summary(pca_result)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
install.packages("FactoMineR")
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
install.packages("missMDA")
library(missMDA)
df_imputed <- imputePCA(df[, v3])$completeObs  # Impute missing values
pca_result <- PCA(df_imputed, scale.unit = TRUE, graph = FALSE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$wealth_pca, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
m <- mean(df$sew_mach_own, na.rm = TRUE)
m
m <- mean(df$fridge_own, na.rm = TRUE)
m
m <- mean(df$radio_own, na.rm = TRUE)
m
wealth_pca_summary <- summary(df$wealth_pca, na.rm = TRUE)
summary(df$wealth_pca, na.rm = TRUE)
View(df)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$hiedu, na.rm = TRUE)
m
m <- mean(df$old, na.rm = TRUE)
m
m <- mean(df$hijobs, na.rm = TRUE)
m
m <- mean(df$hiwealth, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
# Temporarily fill median values for observations with missing values for PCA scores
v2 <- c("workshare", "kutcha_house", "semipucca_house", "own_land", "landsize", "log_income",
"paid_days", "sew_mach_own", "bicycle_own", "motorbike_own", "fridge_own", "radio_own",
"tv_own", "mobile_own", "land_phone_own", "stove_own", "watches_own")
View(df_imputed)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
View(df)
m <- mean(df$c10d_extent_paper_bag_oth, na.rm = TRUE)
m <- mean(df$extent_oth8, na.rm = TRUE)
m
View(df)
df$extent_oth8
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
df$extent_oth8
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
df$extent_oth8
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$d1_karthik_tuna_cons, na.rm = TRUE)
m
m <- mean(df$d1_karthik_tuna, na.rm = TRUE)
m
View(df)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$d1_karthik_tuna_cons, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$d1_karthik_tuna_cons, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$conserv_index, na.rm = TRUE)
m
summary(df$conserv_index)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$conserv5up, na.rm = TRUE)
m
m <- mean(df$conserv5up, na.rm = FALSE)
m
m <- mean(df$conserv5up, na.rm = TRUE)
m
View(df)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$conserv5up, na.rm = TRUE)
m
View(df)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$conserv5up, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
library(FactoMineR)
pca2 <- PCA(df[, v5], scale.unit = TRUE, graph = FALSE, ncp = length(v5))
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
df$pca1
m <- mean(df$pca1, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$pca1, na.rm = TRUE)
m
View(df)
m <- mean(df$pca1, na.rm = FALSE)
m
m <- mean(df$pca1, na.rm = TRUE)
m
ma <- mean(df$pca1, na.rm = TRUE)
ma
summary(df$pca1)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
# Check summary statistics to ensure similarity
summary(df[, c("age", "year_edu", "read_odiya", "married", "famsize", "workmember",
"workshare", "kutcha_house", "semipucca_house", "pucca_house",
"own_land", "landsize", "income", "log_income", "paid_days",
"sew_mach_own", "bicycle_own", "motorbike_own", "fridge_own",
"radio_own", "tv_own", "mobile_own", "land_phone_own",
"stove_own", "watches_own")])
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# PROJECT:		 Replication of "Does Identity Affect Labor Supply?" (Oh, 2023)
# REPLICATORS: Vivan Sharma, Rodrigo Pereira
# TASK:				 Data cleaning
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
library(haven)
library(dplyr)
library(stringr)
df <- read_dta(paste0(rawdata, "choice_jobtakeup.dta"))
# # # # # #
# PART 1
# # # # # #
df <- df %>%
mutate(age = ifelse(!is.na(b1_age), b1_age, NA),
married = ifelse(!is.na(b2_marital_status), b2_marital_status == 1, NA),
famsize = ifelse(b3_hh_all_children >= 0 & b3_hh_adults >= 0 & !is.na(b3_hh_all_children) & !is.na(b3_hh_adults),
b3_hh_adults + b3_hh_all_children, NA),
workmember = ifelse(!is.na(b4_act_engage_paid_work) & b4_act_engage_paid_work <= famsize & b4_act_engage_paid_work >= 0,
b4_act_engage_paid_work, NA),
workshare = ifelse(!is.na(famsize) & famsize > 0, workmember / famsize, NA),
year_edu = ifelse(b5_high_level_edu_class >= 0 & b5_high_level_edu_class <= 12, b5_high_level_edu_class, NA),
year_edu = ifelse(b5_high_level_edu == 0, 0, year_edu),
year_edu = ifelse(b5_high_level_edu == 1 & b5_high_level_edu_class < 0, 0, year_edu),
year_edu = ifelse(b5_high_level_edu %in% c(2, 3, 4), 12, year_edu),
read_odiya = ifelse(b6_read_odiya_paper %in% c(0, 1), b6_read_odiya_paper, NA),
pucca_house = ifelse(!is.na(b7_dwell_type), b7_dwell_type == 1, NA),
semipucca_house = ifelse(!is.na(b7_dwell_type), b7_dwell_type == 2, NA),
kutcha_house = ifelse(!is.na(b7_dwell_type), b7_dwell_type == 3, NA),
gunta = ifelse(b8_own_land_gunta >= 0, b8_own_land_gunta, 0),
acre = ifelse(b8_own_land_acre >= 0, b8_own_land_acre, 0),
landsize = ifelse(!is.na(b8_own_land), gunta / 40 + acre, NA),
own_land = ifelse(!is.na(b8_own_land), b8_own_land %in% c(1, 2), NA),
own_land = ifelse(!is.na(landsize) & landsize == 0, 0, own_land),
income = ifelse(!is.na(b9_hh_tot_income_last_mm) & b9_hh_tot_income_last_mm >= 0,
b9_hh_tot_income_last_mm, NA),
log_income = ifelse(!is.na(income), log(income + sqrt(income^2 + 1)), NA),  # Inverse hyperbolic sine transformation
paid_days = b12_get_paid_7days)
# # # # # #
# PART 2
# # # # # #
# List of variables to process
v1 <- c("b13a_sew_mach_own", "b13b_bicycle_own", "b13c_motorbike_own",
"b13d_fridge_own", "b13e_radio_own", "b13f_tv_own",
"b13g_mobile_own", "b13h_land_phone_own", "b13i_stove_own",
"b13j_watches_own")
# Clean names and values of above
for (x in v1) {
varname <- sub("^b13[a-j]_", "", x)
df[[varname]] <- ifelse(!is.na(df[[x]]), df[[x]] > 0, NA)
}
df$own_index <- rowSums(df[, c("sew_mach_own", "bicycle_own", "motorbike_own",
"fridge_own", "radio_own", "tv_own",
"mobile_own", "land_phone_own", "stove_own", "watches_own")],
na.rm = FALSE)  # Keeps NA if all values in a row are NA
# Check summary statistics to ensure similarity
summary(df[, c("age", "year_edu", "read_odiya", "married", "famsize", "workmember",
"workshare", "kutcha_house", "semipucca_house", "pucca_house",
"own_land", "landsize", "income", "log_income", "paid_days",
"sew_mach_own", "bicycle_own", "motorbike_own", "fridge_own",
"radio_own", "tv_own", "mobile_own", "land_phone_own",
"stove_own", "watches_own")])
# Temporarily fill median values for observations with missing values for PCA scores
v2 <- c("workshare", "log_income")
for (x in v2) {
# Create a backup of the original variable
df[[paste0(x, "_miss")]] <- df[[x]]
# Compute median, ignoring NA values
median_value <- median(df[[x]], na.rm = TRUE)
# Replace missing values with the median
df[[x]][is.na(df[[x]])] <- median_value
}
# Perform PCA (standardizing the data)
v3 <- c("workshare", "log_income", "kutcha_house", "semipucca_house",
"own_land", "landsize", "paid_days",
"sew_mach_own", "bicycle_own", "motorbike_own", "fridge_own",
"radio_own", "tv_own", "mobile_own", "land_phone_own",
"stove_own", "watches_own")
# Identify rows with complete cases
complete_rows <- complete.cases(df[, v3])
# Run PCA on non-missing observations
pca_result <- prcomp(df[complete_rows, v3], center = TRUE, scale. = TRUE)
# Extract the first principal component scores
pca_scores <- pca_result$x[, 1]
# Create a new column and insert PCA scores into the original dataset
df$pca1 <- NA
df$pca1[complete_rows] <- pca_scores
ma <- mean(df$workshare, na.rm = TRUE)
m
ma
View(df)
m <- mean(df$pca1, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
m <- mean(df$hiwealth, na.rm = TRUE)
m
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
m <- mean(df$hiconserv, na.rm = TRUE)
m
install.packages("labelled")
library(labelled)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/cleaning.R", echo=TRUE)
View(df)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
pwd()
cd
cd()
getcwd()
pwd
getwd()
setwd("/Users/vivansharma/Desktop/Oh(2023)/Replication")
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
source("~/Desktop/Oh(2023)/Replication/Oh_main.R", echo=TRUE)
